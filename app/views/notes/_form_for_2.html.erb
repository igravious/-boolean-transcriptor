
<%- content_for(:head) do -%>
    <%= javascript_include_tag "easeljs.min", "data-turbolinks-track" => TURBO %>
    <%= javascript_include_tag "jquery-ui", "data-turbolinks-track" => TURBO %>
    <%= stylesheet_link_tag "jquery-ui.min", media: "all", "data-turbolinks-track" => TURBO %>
    <%= javascript_include_tag "jquery.colorpicker", "data-turbolinks-track" => TURBO %>
    <%= stylesheet_link_tag "jquery.colorpicker", media: "all", "data-turbolinks-track" => TURBO %>
    <%= stylesheet_link_tag "notes", media: "all", "data-turbolinks-track" => TURBO %>
<%- end -%>

<script type="text/javascript">
    var scan_id = '<%= note.scan_id %>';
</script>

    <script>

        var canvas, stage;
        var drawingCanvas;
        var oldPt;
        var oldMidPt;
        var title;
        var color;
        var thickness;
        var caps;
        var joints;
        var OPACITY = 0.05;
        var colors;
        var index;

        function drawTitle() {
            /*
            title = new createjs.Text("Click and Drag to draw", "36px Arial", "#777777");
            title.x = 20;
            title.y = 200;
            stage.addChild(title);
            */
        }

        $( document ).ready( function() {
           
            canvas = document.getElementById("myCanvas");
            index = 0;
            // colors = ["#828b20", "#b0ac31", "#cbc53d", "#fad779", "#f9e4ad", "#faf2db", "#563512", "#9b4a0b", "#d36600", "#fe8a00", "#f9a71f"];

            //check to see if we are running in a browser with touch support
            stage = new createjs.Stage(canvas);
            stage.autoClear = false;
            stage.enableDOMEvents(true);

            createjs.Touch.enable(stage);
            createjs.Ticker.setFPS(24);

            drawingCanvas = new createjs.Shape();

            stage.addEventListener("stagemousedown", handleMouseDown);
            stage.addEventListener("stagemouseup", handleMouseUp);

            drawTitle();

            stage.addChild(drawingCanvas);
            stage.update();

        });

        function stop() {}

        function RGBToHex(rgb) {
            var hex = [
                rgb.r.toString(16),
                rgb.g.toString(16),
                rgb.b.toString(16)  
            ];
            $.each(hex, function (nr, val) {
                if (val.length == 1) {
                    hex[nr] = '0' + val;
                }
            });
            return hex.join('');
        }

        function handleMouseDown(event) {
            /*
            a = $(".colorpicker_new_color").attr('style').split('(')[1].split(', ');
            console.log(a);
            var r = parseInt(a[0]);
            var g = parseInt(a[1]);
            var b = parseInt(a[2].split(')')[0]);
            var rgb = {
                r: r,
                g: g,
                b: b
            }
            console.log(rgb);
            color = "#"+RGBToHex(rgb);
            console.log(color);
            // color = colors[(index++)%colors.length];
            */
            color = "#" + $('#colorpicker-popup').val();
            if (stage.alpha == OPACITY) {
                thickness = 25;
                caps = 'square';
                joints = 'miter';
            } else {
                thickness = 5;
                caps = 'round';
                joints = 'round';
            }
            // stroke = Math.random()*30 + 10 | 0;
            oldPt = new createjs.Point(stage.mouseX, stage.mouseY);
            oldMidPt = oldPt;
            stage.addEventListener("stagemousemove" , handleMouseMove);
        }

        function handleMouseMove(event) {
            var midPt = new createjs.Point(oldPt.x + stage.mouseX>>1, oldPt.y+stage.mouseY>>1);

            drawingCanvas.graphics.clear().setStrokeStyle(thickness, caps, joints).beginStroke(color).moveTo(midPt.x, midPt.y).curveTo(oldPt.x, oldPt.y, oldMidPt.x, oldMidPt.y);

            oldPt.x = stage.mouseX;
            oldPt.y = stage.mouseY;

            oldMidPt.x = midPt.x;
            oldMidPt.y = midPt.y;

            stage.update();
        }

        function handleMouseUp(event) {
            stage.removeEventListener("stagemousemove" , handleMouseMove);
        }

        function drawImage() {
            var canvas=document.getElementById("myCanvas");
            var ctx=canvas.getContext("2d");
            var externalImage1=document.createElement("img");  // chrome bug prevents new Image();
            externalImage1.onload=function(){
                canvas.width=externalImage1.width;
                canvas.height=externalImage1.height;
                ctx.drawImage(externalImage1,0,0);
            }
            externalImage1.src="<%= note.src_data %>";
        }

        function uploadImage() {
            // http://goo.gl/cpDqVS
            var dataURL = canvas.toDataURL('image/jpeg');
            console.log(dataURL);
            $.ajax({
                type: "POST",
                url: "/upload_image/<%= note.id %>",
                data: { 
                    imgBase64: dataURL
                }
            }).done(function(o) {
                alert(o); 
                // If you want the file to be visible in the browser 
                // - please modify the callback in javascript. All you
                // need is to return the url to the file, you just saved 
                // and than put the image in your browser.
            });
        }

        var overwrite_me = true;

        function do_overwrite() {
            overwrite_me = true;
            $('#toggle_highlight').html('overwrite');
            //$('#overwrite').prop('checked',true);
            //$('#highlight').prop('checked',false);
            stage.alpha = 1;
        }

        function do_highlight() {
            overwrite_me = false;
            $('#toggle_highlight').html('highlight');
            //$('#overwrite').prop('checked',false);
            //$('#highlight').prop('checked',true);
            stage.alpha = OPACITY;
        }

    $(function() {
        $('#colorpicker-popup').colorpicker();
    });

    $(function() {
        drawImage();
    });

    $(function() {
        do_highlight();
        $('#highlight').prop('checked',true);
    });

</script>

    <canvas id="myCanvas" class="drawing-area" width=1 height=1></canvas>
    <label for="note_color_picker">click to pick a colour</label>
    <input type="text" id="colorpicker-popup" value="fe9810" size="6">
    <label id="toggle_highlight" for="overwrite_or_highlight">overwrite</label> 
    <input id="overwrite" name="overwrite_or_highlight"  type="radio"  value=1 onclick="do_overwrite();">
    <input id="highlight" name="overwrite_or_highlight"  type="radio"  value=2 onclick="do_highlight();">
    <br/>
    <input name="erase_scrawl"  type="submit" value="erase this snippet" onclick="stage.clear(); drawImage(); drawTitle(); stage.update();return false;">
    <input name="erase_scrawl"  type="submit" value="return to original" onclick="alert('not implemented yet buddy boy');return false;">
    <input name="update_scrawl" type="submit" value="save snippet" onclick="uploadImage();return false;">
    <br/>
    <%= render partial: "notes/member_edit", locals: {member: (Member.find note.member_id)} %>
