
<%- content_for(:head) do -%>
    <%# javascript_include_tag "jquery.elevatezoom", "data-turbolinks-track" => TURBO %>
    <%= javascript_include_tag "jquery.fs.zoomer", "data-turbolinks-track" => TURBO %>
    <%= stylesheet_link_tag "jquery.fs.zoomer", media: "all", "data-turbolinks-track" => TURBO %>
    <%# javascript_include_tag "jquery.dropdown", "data-turbolinks-track" => TURBO %>
    <%# stylesheet_link_tag "jquery.dropdown", media: "all", "data-turbolinks-track" => TURBO %>
    <%= stylesheet_link_tag "notes", media: "all", "data-turbolinks-track" => TURBO %>
    <%= stylesheet_link_tag "wysiwyg", media: "all", "data-turbolinks-track" => TURBO %>
    <%= stylesheet_link_tag "font-awesome.min", media: "all", "data-turbolinks-track" => TURBO %>
<%- end -%>

<script type="text/javascript">
    var original_transcription = '<%= j @scan.transcription %>'
    /*
		Shout Out !!!
		https://developer.mozilla.org/en-US/docs/Rich-Text_Editing_in_Mozilla#Executing_Commands
	*/

	// Passing a named function instead of an anonymous function.
	function readyFn( jQuery ) {
		var selection;
		var text;
		var checkForSelection = function(e){
			
			if (window.getSelection) {
				selection = window.getSelection();
			} else if (document.selection) {
				selection = document.selection.createRange();
			}
			if (selection.toString() !== '') {
				// check we've a sane selection
				//console.log(selection);
				//console.log(selection.toString());
				//selection.toString() !== '' && alert('"' + selection.toString() + '" was selected at ' + e.pageX + '/' + e.pageY);
				shifted = e.shiftKey;
				console.log(shifted);
				console.log("range count:"+selection.rangeCount);
				if (!shifted && selection.rangeCount == 1) {
					//$('#wiki').show();
					text = new String(selection.toString());
					var index_term = prompt("Use selected text as index term or enter another term", text);
					console.log(index_term);
					// check we've a sane index term
					var wiki_text = "[["+index_term+"|"+text+"]]";
					console.log(wiki_text);
					var range = selection.getRangeAt(0);
					range.deleteContents();
					range.insertNode( document.createTextNode(wiki_text));
				}
				//$('#index_term').focus();
			}
			return true;
		};

    	// Code to run when the document is ready.
		$('#editControls a').click(function(e) {
			switch($(this).data('role')) {
    		case 'bookmark-o':
				//document.execCommand('formatBlock', false, $(this).data('role'));
			console.log(e);
			console.log(this);
				checkForSelection(e);
      			break;
    		default:
			console.log(e);
			console.log(this);
      			document.execCommand($(this).data('role'), false, null);
      			break;
    		}
		});
	}
 
	$( document ).ready( readyFn );

	$(function() { $('body').hide().show(); $('#editor').html($('#scan_transcription').val()); $('#editor').focus(); });

	$(function() { $('#commit').click(function () { var shadow = $('#editor').html(); $('#scan_transcription').val(shadow); });

	$(function() {
		// https://stackoverflow.com/questions/3545018/selected-text-event-trigger-in-javascript
		// $('#editor').bind('mouseup', checkForSelection);
		// $('#editor').bind('keyup', checkForSelection);
		// $('#wiki_submit').click(function () { $('#wiki').hide(); $('#editor').focus(); return false; });
		// $('#index_term').click(function () { console.log(text.valueOf()); return false; });
	});
});
</script>

<%= render '/per_view_javascript' %>
<%= render '/per_view_stylesheet' %>

<%= render 'breadcrumb' %>

<%# debug request.env %>
<%# html_escape @scan.pretty_inspect %>
<%# @scan.prefix.to_s+"/"+@scan.major_seq.to_s+"/"+@scan.seq.to_s+" scan #"+@scan.minor_seq.to_s %>

<%
    pint_size = image_path "pint-size/#{@scan.file_name}"
    large_size = serve_up_image_path @scan.id
%>
<script type="text/javascript">
	var markup_link = "<%= markup_path %>";
    var img_link = "<%= snap_path @scan.id %>";
    var aspect = "<%= params['aspect'] %>";
    var whence = "<%= params['whence'] %>";
</script>
<!-- <img id="zoom_it" src="<%= pint_size %>" data-zoom-image="<%= large_size %>" /> -->

<div id="content" class=".clearfix">

    <div class="row">
        <div class="col-md-4">
            <div class="viewer">
                <img src="<%= large_size %>" />
            </div>
        </div>

        <div class="col-md-8">
            <!-- see aspect? do this. -->
            <%= form_for @scan, url: {action: "update", aspect: params['aspect'], whence: params['whence'], q: params['q']} do |f| %>
                <!-- not this. -->
                <!--input type="hidden" id="aspect" name="aspect" value="<%= params['aspect'] %>" /-->
                <!--input type="hidden" id="whence" name="whence" value="<%= params['whence'] %>" /-->
                <!--input type="hidden" id="q" name="q" value="<%= params['q'] %>" /-->
                <!-- nor this. -->
                <%# f.hidden_field(:params, 'aspect') %>
                <div>
                    <!-- Nav tabs -->
                    <ul class="nav nav-tabs">
                        <li id="last-nav-tab" class="active">
                        <a href="#">Default&nbsp;&nbsp;<button type="button" class="close" data-dismiss="tab" aria-hidden="true">Ã—</button></a>
                        </li>
                        <li><a href="#" onclick="add_tab()">+</a>
                        </li>
                    </ul>
                    <!-- Tab panes -->
                    <div class="tab-content">
                        <div id="last-content-tab" class="tab-pane active">
							<!-- http://www.barneyparker.com/world-simplest-html5-wysisyg-inline-editor/ -->
							<div id='editControls'>
								<!-- <em>transcribe here</em> -->
								<div>
									<a title='Click to Undo last operation' class='wizz' data-role='undo'          href='javascript:void(0)'><i class='fa fa-undo'></i></a>
									<a title='Click to Redo last operation' class='wizz' data-role='redo'          href='javascript:void(0)'><i class='fa fa-repeat'></i></a>
									<a title='Highlight text to make bold' class='wizz' data-role='bold'          href='javascript:void(0)'><i class='fa fa-bold'></i></a>
									<a title='Highlight section to italicize' class='wizz' data-role='italic'        href='javascript:void(0)'><i class='fa fa-italic'></i></a>
									<a title='Highlight text to underline' class='wizz' data-role='underline'     href='javascript:void(0)'><i class='fa fa-underline'></i></a>
									<a title='Highlight section to strike through' class='wizz' data-role='strikeThrough' href='javascript:void(0)'><i class='fa fa-strikethrough'></i></a>
									<a title='Highlight text to make index reference' class='wizz' data-role='bookmark-o'    href='javascript:void(0)'><i class='fa fa-bookmark-o'></i></a>
								</div>
							</div>
							<div autofocus="autofocus" id='editor' contenteditable></div>
							<%= f.hidden_field :transcription %>
                        </div>
                    </div>
                </div>
                <div>
                    <!-- disable buttons unless in the right state -->
                    <%
                        if @scan.state == Scan::VIRGIN or @scan.state == Scan::BEING_EDITED
                    %>
                            <%= f.submit "Update the transcription", :onclick => "need_to_confirm=false;", :id => "commit" %>
                            <%# f.label "Process semantic annotation on update" %>
                            <%# f.check_box "annotate" %>
							<%= f.hidden_field "annotate" %>
                            <br/>
                            <%= f.submit "Submit for review", :name => "review_button" %>
                    <%
                        end
                    %>

                    <%
                        if member_signed_in?
                            if @scan.state == Scan::VIRGIN or @scan.state == Scan::BEING_EDITED
                    %>
                                <%= f.submit "Lock the transcription", :name => "lock_button" %>
                    <%
                            end
                            if current_member.matches_whodunnit? @scan or current_member.special?
                                if @scan.state == Scan::LOCKED
                    %>
                                    <%= f.submit "Update the transcription", :onclick => "need_to_confirm=false;" %>
                                    <%# f.label "Process semantic annotation on update" %>
                                    <%# f.check_box "annotate" %>
									<%= f.hidden_field "annotate" %>
                                    <br/>
                                    <%= f.submit "Submit for review", :name => "review_button" %>
                                    <%= f.submit "Unlock the transcription", :name => "unlock_button" %>
                    <%
                                end
                            end
                            if current_member.special? and @scan.state == Scan::IN_REVIEW
                    %>
                                <%= f.submit "Accept this transcription", :name => "accept_button" %>
                                <%= f.submit "Reject this transcription", :name => "reject_button" %>
                                <%= f.text_area "narrative" %>
                    <%

                            end
                        else # member is not signed in, what to show?
                        end
                    %>
                </div>
            <% end %>
			<form id='wiki' style='display: none'><input type='text' id='index_term'><input type='submit' id='wiki_submit'></form>
        </div>
    </div>

    <!-- for my convenience
    1-------10--------20--------30--------40--------50--------60--------70--------80--------90-------100-------110-------120-------130-------140-------150-------160--------
    -->

    <hr> <!-- puffin stuff -->

    <div class="row">
        <div class="col-md-6">
            <ul class="list-group" style="padding-top: 10px">
                <li id="insert_after_me" class="list-group-item">
                    Snippets go here
                </li>
                <%= render partial: @scan.notes.where('type = ?', Note::IMAGE), layout: "notes/note_group_layout" %>
            </ul>
        </div>
        <div class="col-md-6">
            <ul class="list-group" style="padding-top: 10px">
                <li id="insert_after_me" class="list-group-item">
                Compose a new <%= link_to "note", new_note_path(scan_id: @scan.id, aspect: params['aspect'], q: params['q'], whence: params['whence']) %>
                </li>
                <%= render partial: @scan.notes.where('type = ?', Note::TEXT), layout: "notes/note_group_layout" %>
            </ul>
        </div>
    </div>

</div>

<% render partial: 'headings/type' %>
